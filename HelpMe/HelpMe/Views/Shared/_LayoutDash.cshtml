@using Microsoft.AspNet.Identity
@using HelpMe.Models
@using System.Security.Claims;

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>@ViewBag.Title </title>

    <style>

    </style>



    @Styles.Render("~/Content/Custom/css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body>
    <!-- Wrapper -->
    <div id="wrapper">
        <header id="header-container" class="fullwidth ">

            <div id="header">
                <div class="container">
                    <div class="left-side">
                        <div id="logo">
                            <a href="/"><img src="~/Content/Custom/images/logo.png" alt=""></a>
                        </div>
                        <nav id="navigation">
                            <ul id="responsive">
                                <li>
                                    <a href="/Custom/Index" class="current">Лента заказов</a>
                                </li>
                                <li>
                                    <a href="/User/">Исполнители</a>
                                </li>

                                <li>
                                    <a href="#">Готовые работы</a>

                                </li>

                                <li>
                                    <a href="#">Сервисы</a>

                                </li>

                                <li>
                                    <a href="#">FAQ</a>
                                </li>

                            </ul>
                        </nav>
                        <div class="clearfix"></div>
                        <!-- Main Navigation / End -->

                    </div>
                    <!-- Left Side Content / End -->

                    @if (Request.IsAuthenticated)
                    {
                        <div class="right-side">
                            @if (User.IsInRole("User"))
                            {
                                <div class="header-widget hide-on-mobile">
                                    <a href="/Custom/Create" class="button ripple-effect margin-top-18"><i class="icon-feather-plus"></i> Добавить заказ </a>
                                </div>
                            }

                            <div class="header-widget hide-on-mobile">

                                <div class="header-notifications not-trigger">


                                    @*
                                            //для отладки нужно было
                                            //позволяет быстро сделать все уведомления непрочитанными
                                            <div>
                                            <button id="TEST" type="button">TEST!!!</button>
                                        </div>*@

                                    <div class="header-notifications-trigger">
                                        <a class="notCl" href="#"><i class="icon-feather-bell"></i></a>
                                    </div>

                                    <div class="header-notifications-dropdown">
                                        <div class="header-notifications-headline">
                                            <h4>Уведомления</h4>
                                            <button class="mark-as-read ripple-effect-dark mark-notes-as-read" title="Пометить как прочитанное" data-tippy-placement="left">
                                                <i class="icon-feather-check-square"></i>
                                            </button>
                                        </div>
                                        <div class="header-notifications-content">
                                            <div class="header-notifications-scroll" data-simplebar>
                                                <ul class="ncont" id="notifContent">
                                                    <div class="centered-me">
                                                        <div class="lds-ring" id="lds-ring-count"><div></div><div></div><div></div><div></div></div>
                                                    </div>
                                                </ul>
                                            </div>
                                        </div>
                                        <a href="/Manage/Notifications" class="header-notifications-button ripple-effect button-sliding-icon">Посмотреть все уведомления <i class="icon-material-outline-arrow-right-alt"></i></a>
                                    </div>
                                </div>

                                <div class="header-notifications">

                                    <div class="header-notifications-trigger">
                                        <a href="#" class="messUnread"><i class="icon-feather-mail"></i></a>
                                    </div>

                                    <div class="header-notifications-dropdown">
                                        <div class="header-notifications-headline">
                                            <h4>Сообщения</h4>
                                            <button class="mark-as-read ripple-effect-dark" title="Пометить как прочитанное" data-tippy-placement="left">
                                                <i class="icon-feather-check-square"></i>
                                            </button>
                                        </div>
                                        <div class="header-notifications-content">
                                            <div class="header-notifications-scroll" data-simplebar>
                                                <ul>

                                                    <li class="notifications-not-read">
                                                        <a href="dashboard-messages.html">
                                                            <span class="notification-avatar status-online"><img src="images/user-avatar-small-03.jpg" alt=""></span>
                                                            <div class="notification-text">
                                                                <strong>Магамед Магамедович</strong>
                                                                <p class="notification-msg-text">..</p>
                                                                <span class="color">4 часа назад</span>
                                                            </div>
                                                        </a>
                                                    </li>

                                                    <li class="notifications-not-read">
                                                        <a href="dashboard-messages.html">
                                                            <span class="notification-avatar status-online"><img src="images/user-avatar-small-03.jpg" alt=""></span>
                                                            <div class="notification-text">
                                                                <strong>Магамед Магамедович</strong>
                                                                <p class="notification-msg-text">..</p>
                                                                <span class="color">4 часа назад</span>
                                                            </div>
                                                        </a>
                                                    </li>

                                                    <li class="notifications-not-read">
                                                        <a href="dashboard-messages.html">
                                                            <span class="notification-avatar status-online"><img src="images/user-avatar-small-03.jpg" alt=""></span>
                                                            <div class="notification-text">
                                                                <strong>Магамед Магамедович</strong>
                                                                <p class="notification-msg-text">.</p>
                                                                <span class="color">4 часа назад</span>
                                                            </div>
                                                        </a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                        <a href="/chat" class="header-notifications-button ripple-effect button-sliding-icon">Посмотреть все сообщения<i class="icon-material-outline-arrow-right-alt"></i></a>
                                    </div>
                                </div>
                            </div>

                            <div class="header-widget">

                                <div class="header-notifications user-menu">
                                    <div class="header-notifications-trigger">
                                        @{
                                            var avatar = ((ClaimsIdentity)User.Identity).FindFirst("avatar");
                                        }
                                        <a href="#"><div class="user-avatar status-online"><img style="height:42px;width:42px" src="@Url.Content(avatar.Value == null ? "~/Content/Custom/images/user-avatar-placeholder.png" : avatar.Value)" alt=""></div></a>
                                    </div>

                                    <div class="header-notifications-dropdown">

                                        <div class="user-status">

                                            <div class="user-details">
                                                <div class="user-avatar status-online"><img style="height:42px;width:42px" src="@Url.Content(avatar.Value == null ? "~/Content/Custom/images/user-avatar-placeholder.png" : avatar.Value)" alt=""></div>
                                                <div class="user-name">
                                                    @User.Identity.GetUserName() <span></span>
                                                </div>
                                            </div>

                                            <div class="status-switch" id="snackbar-user-status">
                                                @{
                                                    var status = ((ClaimsIdentity)User.Identity).FindFirst("status");
                                                }

                                                <label value="sucess"    class="@(status.Value != "true" ? "user-online" : "user-online current-status")">Готов</label>
                                                <label value="dontworry" class="@(status.Value != "true" ? "user-invisible current-status" : "user-invisible") ">Занят</label>

                                                <span class="status-indicator" aria-hidden="true"></span>
                                            </div>
                                        </div>
                                        <ul class="user-menu-small-nav">
                                            <li><a href="/user/details?userName=@User.Identity.Name"><i class="icon-material-outline-dashboard"></i> Моя страница</a></li>
                                            @if (User.IsInRole("User"))
                                            {
                                                <li><a href="/custom/tasks"><i class="icon-material-outline-folder"></i> Мои заказы</a></li>
                                            }
                                            @if (User.IsInRole("employee"))
                                            {
                                                <li><a href="/custom/tasksexec"><i class="icon-material-outline-folder-shared"></i> Мои задачи</a></li>
                                            }
                                            <li><a href="/wallet"><i class="icon-material-outline-account-balance-wallet"></i> Баланс</a></li>
                                            <li><a href="/manage"><i class="icon-material-outline-settings"></i> Настройки</a></li>
                                            @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
                                            {
                                                @Html.AntiForgeryToken()
                                                <li><a href="javascript:document.getElementById('logoutForm').submit()"><i class="icon-material-outline-power-settings-new"></i> Выйти</a></li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </div>

                            <span class="mmenu-trigger">
                                <button class="hamburger hamburger--collapse" type="button">
                                    <span class="hamburger-box">
                                        <span class="hamburger-inner"></span>
                                    </span>
                                </button>
                            </span>
                        </div>
                    }
                    else
                    {
                        <!-- Right Side Content / End -->
                        <div class="right-side">

                            <div class="header-widget">
                                <a href="#sign-in-dialog" class="popup-with-zoom-anim log-in-button"><i class="icon-feather-log-in"></i> <span>Войти / Регистрация</span></a>
                            </div>

                            <!-- Mobile Navigation Button -->
                            <span class="mmenu-trigger">
                                <button class="hamburger hamburger--collapse" type="button">
                                    <span class="hamburger-box">
                                        <span class="hamburger-inner"></span>
                                    </span>
                                </button>
                            </span>

                        </div>

                    }
                </div>
            </div>

        </header>

        <div id="sign-in-dialog" class="zoom-anim-dialog mfp-hide dialog-with-tabs">
            <!--Tabs -->
            <div class="sign-in-form">
                <ul class="popup-tabs-nav">
                    <li><a href="#login">Войти</a></li>
                    <li><a href="#register">Регистрация</a></li>
                </ul>

                <div class="popup-tabs-container">
                    <div class="popup-tab-content" id="login">
                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <!-- Welcome Text -->
                            <div class="welcome-text">
                                <h3>Авторизация</h3>
                                <span>Нет аккаунта? <a href="/Account/register">Создай новый!</a></span>
                            </div>

                            <!-- Form -->

                            <div class="input-with-icon-left">

                                <i class="icon-material-baseline-mail-outline"></i>
                                @Html.TextBox("Email", "", new { @class = "input-text with-border", @placeholder = "Ваша почта", @id = "emailField" })

                            </div>
                            <div class="input-with-icon-left">
                                <i class="icon-material-outline-lock"></i>
                                @Html.Password("Password", "", new { @class = "input-text with-border", @placeholder = "Пароль", @id = "passwordField" })
                            </div>
                            <div id="valid">
                                @Html.ValidationMessage("Email", "")

                            </div>
                            <a href="/Account/ForgotPassword" style="margin-top:5px" class="forgot-password">Забыл пароль?</a>
                            <!-- Button -->
                            <input id="loginButton" value="Войти" class="button full-width button-sliding-icon ripple-effect" type="submit">

                            <!-- Social Login -->
                            <div class="social-login-separator"><span>или</span></div>
                            <div class="social-login-buttons">
                                <button class="facebook-login ripple-effect"><i class="icon-brand-facebook-f"></i> Войти с Facebook</button>
                                <button class="google-login ripple-effect"><i class="icon-brand-google-plus-g"></i> Войти via Google+</button>
                            </div>
                        }
                    </div>
                    <!-- Register -->
                    <div class="popup-tab-content" id="register">
                        @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <!-- Welcome Text -->
                            <div class="welcome-text">
                                <h3>Создание аккаунта</h3>
                            </div>
                            <!-- Account Type -->
                            <div class="account-type">
                                <div>
                                    <input type="radio" name="RoleName" value="employee" id="freelancer-radio" class="account-type-radio" checked />
                                    <label for="freelancer-radio" class="ripple-effect-dark"><i class="icon-material-outline-school"></i> Исполнитель</label>
                                </div>
                                <div>
                                    <input type="radio" name="RoleName" value="user" id="employer-radio" class="account-type-radio" />
                                    <label for="employer-radio" class="ripple-effect-dark"><i class="icon-material-outline-business-center"></i> Заказчик</label>
                                </div>
                            </div>
                            <!-- Form -->
                            <div class="input-with-icon-left">
                                <i class="icon-material-outline-account-circle"></i>
                                @Html.TextBox("UserName", "", new { @class = "input-text with-border", @id = "usName", @placeholder = "Ваш логин" })
                            </div>
                            <div class="input-with-icon-left">
                                <i class="icon-material-baseline-mail-outline"></i>
                                @Html.TextBox("Email", "", new { @class = "input-text with-border", @type = "email", @placeholder = "Ваша почта" })
                            </div>
                            <div class="input-with-icon-left" title="Пароль должен быть не менее 6 символов" data-tippy-placement="bottom">
                                <i class="icon-material-outline-lock"></i>
                                @Html.Password("Password", "", new { @class = "input-text with-border", @id = "fpass", @placeholder = "Пароль" })
                            </div>
                            <div class="input-with-icon-left">
                                <i class="icon-material-outline-lock"></i>
                                @Html.Password("ConfirmPassword", "", new { @class = "input-text with-border", @id = "spass", @placeholder = "Повторите пароль" })
                            </div>
                            <div style="display:none" class="result"></div>
                            <!-- Button -->
                            <input value="Создать" class="button full-width button-sliding-icon ripple-effect" type="submit">
                            <!-- Social Login -->
                            <div class="social-login-separator"><span>или</span></div>
                            <div class="social-login-buttons">
                                <button class="facebook-login ripple-effect"><i class="icon-brand-facebook-f"></i> Регаться via Facebook</button>
                                <button class="google-login ripple-effect"><i class="icon-brand-google-plus-g"></i> Регаться via Google+</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>

        <div class="dashboard-container">
            <div class="dashboard-sidebar">
                <div class="dashboard-sidebar-inner" data-simplebar>
                    <div class="dashboard-nav-container">

                        <!-- Responsive Navigation Trigger -->
                        <a href="#" class="dashboard-responsive-nav-trigger">
                            <span class="hamburger hamburger--collapse">
                                <span class="hamburger-box">
                                    <span class="hamburger-inner"></span>
                                </span>
                            </span>
                            <span class="trigger-title">Меню</span>
                        </a>

                        <!-- Navigation -->
                        <div class="dashboard-nav">
                            <div class="dashboard-nav-inner">
                                <ul data-submenu-title="Управление">
                                    @if (User.IsInRole("User"))
                                    {
                                        <li class="@(ViewContext.RouteData.Values["Controller"].ToString() == "custom" ? "active" : "")">
                                            <a href="#"><i class="icon-material-outline-business-center"></i>Мои заказы</a>
                                            <ul>
                                                <li><a href="/custom/tasks">Список заказов@*<span class="nav-tag">3</span>*@</a></li>
                                                <li><a href="/Custom/Create">Разместить задачу</a></li>
                                            </ul>
                                        </li>
                                    }
                                    @if (User.IsInRole("employee"))
                                    {
                                        <li class="@(ViewContext.RouteData.Values["Controller"].ToString() == "custom" ? "active" : "")">
                                            <a href="#"><i class="icon-material-outline-assignment"></i>Мои задачи</a>
                                            <ul>
                                                <li><a href="/custom/tasksexec">Список работ@*<span class="nav-tag">2</span>*@</a></li>
                                                <li><a href="/custom/myactivebids">Мои предложения</a></li>

                                            </ul>
                                        </li>
                                    }
                                </ul>
                                <ul data-submenu-title="Основное">
                                    @*<li class="@(ViewContext.RouteData.Values["Action"].ToString() == "dashboard" ? "active" : "")"><a href="/manage/dashboard"><i class="icon-material-outline-dashboard"></i> Рабочая доска</a></li>*@
                                    <li class="@(ViewContext.RouteData.Values["Controller"].ToString() == "chat" ? "active" : "")">
                                        <a href="/chat">
                                            <i class="icon-material-outline-question-answer"></i> Сообщения
                                            @{
                                                int unreadingCount = ViewBag.UnreadingCount;
                                                if (ViewBag.UnreadingCount > 0)
                                                {
                                                    <span class="nav-tag">@unreadingCount</span>
                                                }
                                            }
                                        </a>
                                    </li>
                                    <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "likeit" ? "active" : "")"><a href="/manage/likeit"><i class="icon-material-outline-star-border"></i> Избранное</a></li>
                                    <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "notifications" ? "active" : "")"><a href="/manage/notifications"><i class="icon-material-baseline-notifications-none"></i> Уведомления</a></li>
                                    <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "reviews" ? "active" : "")"><a href="/manage/reviews"><i class="icon-material-outline-rate-review"></i> Отзывы</a></li>
                                </ul>



                                <ul data-submenu-title="Аккаунт">
                                    <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"><a href="/manage/"><i class="icon-material-outline-settings"></i> Настройки</a></li>
                                    <li><a href="javascript:document.getElementById('logoutForm').submit()"><i class="icon-material-outline-power-settings-new"></i> Выход</a></li>
                                </ul>

                            </div>
                        </div>
                        <!-- Navigation / End -->

                    </div>
                </div>
            </div>

            @RenderBody()

        </div>

    </div>
    <!--Ссылка на библиотеку SignalR -->

    @Scripts.Render("~/bundles/jquery")
    <script src="~/Scripts/Custom/simplebar.min.js"></script>
    <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script src="~/Scripts/util.js"></script>
    <script src="~/Scripts/Custom/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/iwc-all.min.js"></script>
    <script src="~/Scripts/signalr-patch.js"></script>
    <script src="~/Scripts/iwc-signalr.js"></script>
    <script src="~/Scripts/inputmask/inputmask.js"></script>
    <script src="~/Scripts/inputmask/inputmask.extensions.js"></script>
    <script src="~/Scripts/inputmask/jquery.inputmask.js"></script>

    
    <script src="//netdna.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

    <link href="//cdnjs.cloudflare.com/ajax/libs/x-editable/1.5.0/bootstrap3-editable/css/bootstrap-editable.css" rel="stylesheet" />
    <script src="//cdnjs.cloudflare.com/ajax/libs/x-editable/1.5.0/bootstrap3-editable/js/bootstrap-editable.min.js"></script>


    @Scripts.Render("~/bundles/Scripts/Custom/js")


    <script>
        // Snackbar for user status switcher
        //$('#snackbar-user-status label').click(function () {
        //    Snackbar.show({
        //        text: 'Ваш статус изменен!',
        //        pos: 'bottom-center',
        //        showAction: false,
        //        actionText: "Dismiss",
        //        duration: 3000,
        //        textColor: '#fff',
        //        backgroundColor: '#383838'
        //    });
        //});


        $('#spass').on('keyup', function () {
            if ($('#fpass').val() == $('#spass').val()) {
                $('.result').hide();
            } else {
                $('.result').show();
                $('.result').html('Пароли не совпадают');
            }
        });

        $("#usName").bind('keyup', function () {
            $(this).val($(this).val().replace(/[^a-z ]/i, ""));
            Snackbar.show({
                text: 'Только латинские символы!',
                pos: 'bottom-center',
                showAction: false,
                actionText: "Dismiss",
                duration: 3000,
                textColor: '#fff',
                backgroundColor: '#383838'
            });
        });

        $('#header .right-side').css('float', 'left')
        $('#header .right-side').css('float', 'right')

        $('#snackbar-user-status label').click(function () {

            $.ajax({
                type: 'POST',
                url: '/User/ChangeStatus/',
                data: { value: $(this).attr("value") },
                success: function (response) {

                },
                error: function (error) {
                    console.log(error);
                }
            });

            Snackbar.show({
                text: 'Статус изменен!',
                pos: 'bottom-center',
                showAction: false,
                actionText: "Dismiss",
                duration: 3000,
                textColor: '#fff',
                backgroundColor: '#383838'
            });
        });


        // подключаемся к хабам
        var notificationhub = $.connection.notificationHub;
        var chathub = $.connection.chatHub;

        // Получаем кол-во непрочитанные сообщений
        $.ajax({
            type: 'GET',
            url: '/Home/GetUnreadingMessageCount',
            success: function (response) {
                if (response != 0) {
                    if ($("#messUnreadCount").length == 0) {
                        $('.messUnread').append("<span id='messUnreadCount'>" + response + "</span>")
                    }
                }
            },
            error: function (error) {
                console.log(error);
            }
        })

        // Получаем кол-во непрочитанных уведомлений
        $.ajax({
            type: 'GET',
            url: '/Home/GetUnreadingCount',
            success: function (response) {
                if (response != 0) {
                    if ($(".notiUnreadCount").length == 0) {
                        $('.notCl').append("<span class='notiUnreadCount'>" + response + "</span>")
                    }
                }
            },
            error: function (error) {
                console.log(error);
            }
        })

        //var isSuccess = false;

        function GetAllNotificationsHeader() {
            //console.log('header bell');
            $("header-notifications-scroll .lds-ring").children().show();
            $.ajax({
                type: 'GET',
                url: '/Home/GetAllNotifications',
                success: function (response) {

                    $('#notific').hide();
                    $('.ncount').hide();
                    $('.ncont').empty();
                    // $('#notifContent').empty();

                    $('.mark-notes-as-read').prop('disabled', true);
                    if (response.length == 0) {
                        $('.notiUnreadCount').remove();
                        $('.ncont').append($('<li class="centered-me">Нет новых уведомлений</li>'));
                    }
                    else {
                        $.each(response, function (index, value) {

                            $('.ncont').prepend($('<li class="notifications-not-read" data-notification-id="'
                                + value.Id
                                + '"><a href="/Custom/Details/'
                                + value.CustomId
                                + '"><span class="notification-icon"><i class="icon-material-outline-group"></i></span><span class="notification-text">'
                                + value.Description
                                + '</span></a></li>'));

                        });
                    }

                    $('.mark-notes-as-read').prop('disabled', false);
                    $("header-notifications-scroll .lds-ring").children().hide();
                },
                error: function (error) {
                    console.log(error);
                }
            })
        }


        // для clone stick
        //$(".fullwidth.cloned.sticky").on('click', '.notCl', function () {
        //    console.log('cloned sticky');
        //    //подгружаем уведомления, только если дропдаун с уведомлениями еще НЕ открыт
        //    //просто раньше каждое нажатие на колокольчик осуществляло запрос на сервер (даже с открытым дропдауном)
        //    $sticky = $('.fullwidth.cloned.sticky #not-trigger');
        //    if (!$sticky.hasClass('active')) {
        //        GetAllNotificationsHeader();
        //    }
        //});

        // для header
        $('.notCl').click(function (e) {
            //console.log('header');
            //подгружаем уведомления, только если дропдаун с уведомлениями еще НЕ открыт
            //просто раньше каждое нажатие на колокольчик осуществляло запрос на сервер (даже с открытым дропдауном)
            //$header = $('.not-trigger');

            var dropdownactive = false;
            $('.not-trigger').each(function () {
                if ($(this).hasClass('active')) {
                    dropdownactive = true;
                }
            });
            if (!dropdownactive) {
                GetAllNotificationsHeader();
            }
        });

        //для отладки нужно было
        //позволяет быстро сделать все уведомления непрочитанными
        @*$('#TEST').click(function () {
            $.ajax({
                type: 'GET',
                url: '/Home/TestMakeAllUnread',
                data: {
                    userId: "@User.Identity.GetUserId()"
                },
                success: function (response) {
                    console.log("success of test");
                },
                error: function (error) {
                    console.log(error);
                }
            });
        });*@

        //действие галочки в шапке в дропдауне уведомлений
        $('.mark-notes-as-read').click(function () {
            $(this).prop('disable', true);
            var notUnreadCount = $('.notiUnreadCount').text();
            var mid = notUnreadCount.length / 2;
            var countOfUnreadNotifications = parseInt(notUnreadCount.slice(0,mid));
            if (countOfUnreadNotifications > 0) {

                var unreadNotificationsId = [];

                $('#notifContent .notifications-not-read').each(function () {
                    countOfUnreadNotifications -= 0.5;
                    unreadNotificationsId.push($(this).attr('data-notification-id'));
                });

                $.ajax({
                    type: 'POST',
                    url: '/Home/MarkHeaderNotesAsRead',
                    data: {
                        ids: unreadNotificationsId
                    },
                    success: function (response) {
                        GetAllNotificationsHeader();
                        if (countOfUnreadNotifications > 0) {
                            $('.notiUnreadCount').text(countOfUnreadNotifications);
                        }
                        else {
                            $('.notiUnreadCount').remove();
                        }
                        $(this).prop('disable', false);
                    },
                    error: function (error) {
                        $(this).prop('disable', false);
                        console.log(error);
                    }
                });
            }
        });


        // SignalR увеличиваем кол-во непрочитанных сообщений
        chathub.client.displayUnreadCountMessage = function () {

            if ($("#messUnreadCount").length == 0) {
                $('.messUnread').append("<span id='messUnreadCount'>1</span>")
            } else {
                var unreadText = $('#messUnreadCount').text();
                $('#messUnreadCount').text(parseInt(unreadText) + 1);
            }

            Snackbar.show({
                text: 'Новое сообщение!',
                pos: 'top-right',
                showAction: false,
                actionText: "Dismiss",
                width: 200,
                duration: 1500,
                textColor: '#5f9025',
                backgroundColor: '#EBF6E0',
            });
        };


        notificationhub.client.displayMessage = function (message) {
            /* $('#notific').show();
             $('.ncount').show();
             var num = $('#notific').text();
             var num1 = $('.ncount').text();
             if (num == '') num = num1 = 0;
             $('.ncount').text(parseInt(num) + 1); */

            if ($(".notiUnreadCount").length == 0) {

                $('.notCl').append("<span class='notiUnreadCount'>1</span>")
            } else {
                var unreadText = $('.notiUnreadCount').text().charAt(0);

                $('.notiUnreadCount').text(parseInt(unreadText) + 1);
            }

            Snackbar.show({
                text: 'Новое уведомление!',
                pos: 'top-right',
                showAction: false,
                actionText: "Dismiss",
                width: 200,
                duration: 4000,
                textColor: '#5f9025',
                backgroundColor: '#EBF6E0',

            });

        };

        $.connection.hub.start();

    </script>


    <!-- Google Autocomplete -->
    <script>
        function initAutocomplete() {
            var options = {
                types: ['(cities)'],
                // componentRestrictions: {country: "us"}
            };

            var input = document.getElementById('autocomplete-input');
            var autocomplete = new google.maps.places.Autocomplete(input, options);
        }

        // Autocomplete adjustment for homepage
        if ($('.intro-banner-search-form')[0]) {
            setTimeout(function () {
                $(".pac-container").prependTo(".intro-search-field.with-autocomplete");
            }, 300);
        }

    </script>

    @RenderSection("scripts", required: false)

</body>
</html>


