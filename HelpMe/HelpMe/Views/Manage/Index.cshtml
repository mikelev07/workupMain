@model HelpMe.Models.IndexViewModel

@{
    Layout = "~/Views/Shared/_LayoutDash.cshtml";
}

@{
    ViewBag.Title = "Управление";
}


<!-- Dashboard Sidebar
================================================== -->
<!-- Dashboard Sidebar / End -->
<!-- Dashboard Content
================================================== -->
<div class="dashboard-content-container" data-simplebar>
    <div class="dashboard-content-inner">

        <!-- Dashboard Headline -->
        <div class="dashboard-headline">
            <h3>Настройки</h3>

            <!-- Breadcrumbs -->
            <nav id="breadcrumbs" class="dark">
                <ul>
                    <li><a href="#">Главная</a></li>
                    <li><a href="#">Дашборд</a></li>
                    <li>Настройка</li>
                </ul>
            </nav>
        </div>

    
            <!-- Row -->
            <div class="row">

                <!-- Dashboard Box -->
                <div class="col-xl-12">
                    <div class="dashboard-box margin-top-0">

                        <!-- Headline -->
                        <div class="headline">
                            <h3><i class="icon-material-outline-account-circle"></i> Мой аккаунт</h3>
                        </div>

                        <div class="content with-padding padding-bottom-0">
                            <div class="row">
                                <div class="col-auto">
                                    <div class="avatar-wrapper" data-tippy-placement="bottom" title="Изменить аватар">
                                        <img class="profile-pic" src="@Url.Content(ViewBag.Image)" alt="" />
                                        <div class="upload-button"></div>
                                        <input class="file-upload" type="file" name="ImageFile" id="ImageFile" />
                                    </div>
                                </div>

                                <div class="col">
                                    <div class="row">
                                        <div class="col-xl-6">
                                            <div class="submit-field">
                                                <h5>Ник</h5>
                                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @Value = "", @class = "with-border", @placeholder = Model.Name } })
                                            </div>
                                        </div>

                                        <div class="col-xl-6">
                                            <div class="submit-field">
                                                <h5>Телефон</h5>
                                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @Value = "", @class = "with-border", @placeholder = Model.PhoneNumber } })
                                            </div>
                                        </div>

                                        @*<div class="col-xl-6">
                                                <div class="submit-field">
                                                    <h5>Возраст</h5>
                                                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @Value = "", @class = "with-border", @placeholder = Model.Age } })
                                                </div>
                                            </div>*@

                                        <div class="col-xl-6">
                                            <!-- Account Type -->
                                            <div class="submit-field">
                                                <h5>Тип аккаунта</h5>
                                                <div class="account-type">
                                                    <div>
                                                        <input type="radio" name="account-type-radio" id="freelancer-radio-1" class="account-type-radio" checked />
                                                        <label for="freelancer-radio-1" class="ripple-effect-dark"><i class="icon-material-outline-account-circle"></i>Исполнитель</label>
                                                    </div>

                                                    @*<div>
                                                            <input type="radio" name="account-type-radio" id="employer-radio-1" class="account-type-radio"  disabled/>
                                                            <label for="employer-radio-1" class="ripple-effect-dark"><i class="icon-material-outline-business-center"></i>Заказчик</label>
                                                        </div>*@
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-xl-6">
                                            <div class="submit-field">
                                                <h5>Почта</h5>
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @Value = "", @class = "with-border", @placeholder = Model.Email } })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="col-xl-12">
                    <input type="submit" value="Сохранить изменения" class="button ripple-effect big margin-top-30" />
                </div>
                <!-- Dashboard Box -->
                <div class="col-xl-12">
                    <div class="dashboard-box">

                        <!-- Headline -->
                        <div class="headline">
                            <h3><i class="icon-material-outline-face"></i> Мой профиль</h3>
                        </div>

                        <div class="content">
                            <ul class="fields-ul">
                                <li>
                                    <div class="row">

                                        <div class="col-xl-6">
                                            <div class="submit-field">
                                                <h5>Дисциплины</h5>


                                                <a href="#small-dialog" class="apply-now-button popup-with-zoom-anim margin-bottom-50">Привлечь к заданию <i class="icon-material-outline-arrow-right-alt"></i></a>

                                                <br />
                                                <div class="keywords-list">

                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-xl-12">
                                            <div class="submit-field">
                                                <h5>Портфолио</h5>
                                                <form method="post" action="/Manage/UploadPortfolioMultiAttach/?name=@User.Identity.Name" enctype="multipart/form-data" novalidate="" class="box has-advanced-upload">
                                                    <div class="box__input">
                                                        <svg class="box__icon" xmlns="http://www.w3.org/2000/svg" width="50" height="43" viewBox="0 0 50 43"><path d="M48.4 26.5c-.9 0-1.7.7-1.7 1.7v11.6h-43.3v-11.6c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v13.2c0 .9.7 1.7 1.7 1.7h46.7c.9 0 1.7-.7 1.7-1.7v-13.2c0-1-.7-1.7-1.7-1.7zm-24.5 6.1c.3.3.8.5 1.2.5.4 0 .9-.2 1.2-.5l10-11.6c.7-.7.7-1.7 0-2.4s-1.7-.7-2.4 0l-7.1 8.3v-25.3c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v25.3l-7.1-8.3c-.7-.7-1.7-.7-2.4 0s-.7 1.7 0 2.4l10 11.6z"></path></svg>

                                                        <div style="justify-content:center" class="uploadButton">
                                                            <input class="uploadButton-input box__file" type="file" id="file" name="upload" data-multiple-caption="{count} файлов выбрано" multiple="multiple" /><br />
                                                            <label id="textLab" class="uploadButton-button ripple-effect" for="file">Прикрепить портфолио</label><span style="margin-left:15px;margin-top:6px; font-size:18px" class="box__dragndrop"> или перетащите файлы сюда</span>.
                                                        </div>
                                                        <button type="submit" class="box__button">Загрузить</button>
                                                    </div>
                                                    <div style="margin-bottom:40px" class="box__uploading"><p>Загружаем портфолио</p><div class="lds-ring"><div></div><div></div><div></div><div></div></div></div>
                                                    <div class="box__success">Успешно! <a href="//?" class="box__restart" role="button">Загрузить еще?</a></div>
                                                    <div class="box__error">Ошибка загрузки! <span></span>. <a href="//?" class="box__restart" role="button">Попробовать снова!</a></div>
                                                    <input type="hidden" name="ajax" value="1">
                                                </form>
                                                <br />
                                                <!-- Attachments -->
                                                <div class="col-xl-6">
                                                    <div id="Portfolio" class="attachments-container margin-top-0 margin-bottom-0">

                                                        <div class="attachment-box ripple-effect">
                                                            <span>Cover Letter</span>
                                                            <i>PDF</i>
                                                            <button class="remove-attachment" data-tippy-placement="top" title="Remove"></button>
                                                        </div>

                                                    </div>
                                                    </div>
                                                    <div class="clearfix"></div>


                                                </div>
                                            </div>
                                    </div>
                                </li>
                                <li>
                                    <div class="row">


                                        <div class="col-xl-12">
                                            <div class="submit-field">
                                                <h5>Расскажите о себе</h5>
                                                <textarea cols="30" rows="5" class="with-border">Привет всем, кто я такой?.</textarea>
                                            </div>
                                        </div>

                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>

                <!-- Dashboard Box -->
                <div class="col-xl-12">
                    <div id="test1" class="dashboard-box">

                        <!-- Headline -->
                        <div class="headline">
                            <h3><i class="icon-material-outline-lock"></i> Пароль</h3>
                        </div>

                        <div class="content with-padding">
                            <div class="row">
                                <div class="col-xl-4">
                                    <div class="submit-field">
                                        <h5>Текущий пароль</h5>
                                        <input type="password" class="with-border">
                                    </div>
                                </div>

                                <div class="col-xl-4">
                                    <div class="submit-field">
                                        <h5>Новый пароль</h5>
                                        <input type="password" class="with-border">
                                    </div>
                                </div>

                                <div class="col-xl-4">
                                    <div class="submit-field">
                                        <h5>Повторить пароль</h5>
                                        <input type="password" class="with-border">
                                    </div>
                                </div>

                                <div class="col-xl-12">
                                    <div class="checkbox">
                                        <input type="checkbox" id="two-step" checked>
                                        <label for="two-step"><span class="checkbox-icon"></span> Включить двухфакторную авторизацию</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Button -->
                <div class="col-xl-12">
                    <input type="submit" value="Сохранить изменения" class="button ripple-effect big margin-top-30" />
                </div>

            </div>
        

        <!-- Row / End -->
        <!-- Footer -->
        <div class="dashboard-footer-spacer"></div>
        <div class="small-footer margin-top-15">
            <div class="small-footer-copyrights">
                © 2018 <strong>ВоркАп</strong>. All Rights Reserved.
            </div>
            <ul class="footer-social-links">
                <li>
                    <a href="#" title="Facebook" data-tippy-placement="top">
                        <i class="icon-brand-facebook-f"></i>
                    </a>
                </li>
                <li>
                    <a href="#" title="Twitter" data-tippy-placement="top">
                        <i class="icon-brand-twitter"></i>
                    </a>
                </li>
                <li>
                    <a href="#" title="Google Plus" data-tippy-placement="top">
                        <i class="icon-brand-google-plus-g"></i>
                    </a>
                </li>
                <li>
                    <a href="#" title="LinkedIn" data-tippy-placement="top">
                        <i class="icon-brand-linkedin-in"></i>
                    </a>
                </li>
            </ul>
            <div class="clearfix"></div>
        </div>
        <!-- Footer / End -->

    </div>
</div>

<div id="small-dialog" class="zoom-anim-dialog mfp-hide dialog-with-tabs">

    <!--Tabs -->
    <div class="sign-in-form">

        <ul class="popup-tabs-nav">
            <li><a href="#tab">Хуйня</a></li>
        </ul>

        <div class="popup-tabs-container">

            <!-- Tab -->
            <div class="popup-tab-content" id="tab">

                <!-- Welcome Text -->
                <div class="welcome-text">
                    <h3>Выберите специализацию</h3>
                </div>

                <!-- Form -->


                <div class="taby">
                    <button class="tablinks active" onclick="openCity(event, 'London')">Математические дисциплины</button>
                    <button class="tablinks" onclick="openCity(event, 'Paris')">Естественные науки</button>
                    <button class="tablinks" onclick="openCity(event, 'Tokyo')">Естественные ватуки</button>
                    <button class="tablinks" onclick="openCity(event, 'London1')">Естественные уруки</button>
                    <button class="tablinks" onclick="openCity(event, 'Paris1')">Естественные суки</button>
                    <button class="tablinks" onclick="openCity(event, 'Tokyo1')">Естественные хуйуки</button>
                    <button class="tablinks" onclick="openCity(event, 'London2')">Естественные тануки</button>
                    <button class="tablinks" onclick="openCity(event, 'Paris2')">Естественные батуки</button>
                    <button class="tablinks" onclick="openCity(event, 'Tokyo2')">
                        Естественные шмуки
                    </button>

                </div>

                <div id="London" class="tabycontent">

                    <div class="checkbox">
                        <input type="checkbox" id="chekcbox1" checked>
                        <label for="chekcbox1"><span class="checkbox-icon"></span> Догги-стайл</label>
                    </div> <br />
                    <div class="checkbox">
                        <input type="checkbox" id="chekcbox2" checked>
                        <label for="chekcbox2"><span class="checkbox-icon"></span> Догги-станский</label>
                    </div> <br />
                    <div class="checkbox">
                        <input type="checkbox" id="chekcbox3" checked>
                        <label for="chekcbox3"><span class="checkbox-icon"></span> Чечно-залупский</label>
                    </div>


                </div>

                <div style="display:none" id="Paris" class="tabycontent">
                    <h3>Paris</h3>
                    <p>Paris is the capital of France.</p>
                </div>

                <div style="display:none" id="Tokyo" class="tabycontent">
                    <h3>Tokyo</h3>
                    <p>Tokyo is the capital of Japan.</p>
                </div>

                <div style="display:none" id="London1" class="tabycontent">
                    <h3>London</h3>
                    <p>London is the capital city of England.</p>
                </div>

                <div style="display:none" id="Paris1" class="tabycontent">
                    <h3>Paris</h3>
                    <p>Paris is the capital of France.</p>
                </div>

                <div style="display:none" id="Tokyo1" class="tabycontent">
                    <h3>Tokyo</h3>
                    <p>Tokyo is the capital of Japan.</p>
                </div>

                <div style="display:none" id="London2" class="tabycontent">
                    <h3>London</h3>
                    <p>London is the capital city of England.</p>
                </div>

                <div style="display:none" id="Paris2" class="tabycontent">
                    <h3>Paris</h3>
                    <p>Paris is the capital of France.</p>
                </div>

                <div style="display:none" id="Tokyo2" class="tabycontent">
                    <h3>Tokyo</h3>
                    <p>Tokyo is the capital of Japan.</p>
                </div>


            </div>


        </div>
    </div>
</div>

<!-- Dashboard Content / End -->
@section Scripts {
    <script>

       'use strict';

        ; (function (document, window, index) {
            // обнаруживаем другидруп
            var isAdvancedUpload = function () {
                var div = document.createElement('div');
                return (('draggable' in div) || ('ondragstart' in div && 'ondrop' in div)) && 'FormData' in window && 'FileReader' in window;
            }();


            // создаем эффекты для формы
            var forms = document.querySelectorAll('.box');
            Array.prototype.forEach.call(forms, function (form) {
                var input = form.querySelector('input[type="file"]'),
                    label = form.querySelector('label'),
                    errorMsg = form.querySelector('.box__error span'),
                    restart = form.querySelectorAll('.box__restart'),
                    droppedFiles = false,
                    showFiles = function (files) {
                       // надо подумать епта
                        label.textContent = /*files.length >= 1 ? (input.getAttribute('data-multiple-caption') || '').replace('{count}', files.length) */ files[0].name;
                    },
                    triggerFormSubmit = function () {
                        var event = document.createEvent('HTMLEvents');
                        event.initEvent('submit', true, false);
                        form.dispatchEvent(event);
                    };

                // добавлем флаги для серверного аякса
                var ajaxFlag = document.createElement('input');
                ajaxFlag.setAttribute('type', 'hidden');
                ajaxFlag.setAttribute('name', 'ajax');
                ajaxFlag.setAttribute('value', 1);
                form.appendChild(ajaxFlag);
                var globFiles = [];
                // автоматически отправялем форму
                input.addEventListener('change', function (e) {
                    showFiles(e.target.files);
                    globFiles = e.target.files;
                    triggerFormSubmit();
                });

                // чекаем другандрупные файлы
                if (isAdvancedUpload) {
                    form.classList.add('has-advanced-upload'); // если браузер не поддерживает файлы с помощью драгундруппо

                    ['drag', 'dragstart', 'dragend', 'dragover', 'dragenter', 'dragleave', 'drop'].forEach(function (event) {
                        form.addEventListener(event, function (e) {
                            // preventing the unwanted behaviours
                            e.preventDefault();
                            e.stopPropagation();
                        });
                    });
                    ['dragover', 'dragenter'].forEach(function (event) {
                        form.addEventListener(event, function () {
                            form.classList.add('is-dragover');
                        });
                    });
                    ['dragleave', 'dragend', 'drop'].forEach(function (event) {
                        form.addEventListener(event, function () {
                            form.classList.remove('is-dragover');

                        });
                    });
                    form.addEventListener('drop', function (e) {
                        droppedFiles = e.dataTransfer.files; // файлы для подгрузки в аяксе
                        globFiles = e.dataTransfer.files;
                        showFiles(droppedFiles);
                        triggerFormSubmit();
                    });
                }
                // если форма была отправлена
                form.addEventListener('submit', function (e) {
                    // убираем дубликаты
                    if (form.classList.contains('is-uploading')) return false;

                    form.classList.add('is-uploading');
                    form.classList.remove('is-error');

                    if (isAdvancedUpload) // чекаем проверку для поддержки бразуера
                    {
                        e.preventDefault();

                        var ajaxData = new FormData(form);
                        if (droppedFiles) {
                            for (var i = 0; i < droppedFiles.length; i++)
                                ajaxData.append("file"+i,droppedFiles[i]);
                               // ajaxData.append(input.getAttribute('name'), file);
                        }

                        // непосредственно запрос аякса Myattaches
                        var ajax = new XMLHttpRequest();
                        ajax.open(form.getAttribute('method'), form.getAttribute('action'), true);


                            ajax.onload = function () {
                                form.classList.remove('is-uploading');
                                if (ajax.status >= 200 && ajax.status < 400) {

                                   // alert("good")

                                    var votes = $("#PortfolioAttaches");
                                    var num = $("#PortfolioAttaches").text();
                                    // alert(num + (droppedFiles.length))
                                    if (parseInt(parseInt(parseInt(num) + parseInt(globFiles.length))) < 11) {
                                        votes.text(parseInt(parseInt(num) + parseInt(globFiles.length)));
                                    } else {
                                        Snackbar.show({
                                            text: 'Максимум 10 файлов решений!',
                                        });
                                        $("#textLab").text("Прикрепить решения");
                                        return false;
                                    }
                                    $('#Portfolio').load('@Url.Action("LoadPortfolioAttaches", "Manage")?name=' +@User.Identity.Name);

                                    var data = JSON.parse(ajax.responseText);
                                    $("#textLab").text("Прикрепить решения");
                                    form.classList.add(data.success != true ? 'is-success' : 'is-error');
                                    if (!data.success) errorMsg.textContent = data.error;
                                }
                                else { alert('Ошибка! Дайте пизды создателю'); $("#textLab").text("Прикрепить решения"); }
                            };
                        

                        ajax.onerror = function () {
                            form.classList.remove('is-uploading');
                            $("#textLab").text("Прикрепить решения");
                            alert('Ошибка блять ты мудак!');
                        };

                        ajax.send(ajaxData);
                    }
                    else
                    { // создаем окно для дальнейших действий
                        var iframeName = 'uploadiframe' + new Date().getTime(),
                            iframe = document.createElement('iframe');

                        $iframe = $('<iframe name="' + iframeName + '" style="display: none;"></iframe>');

                        iframe.setAttribute('name', iframeName);
                        iframe.style.display = 'none';

                        document.body.appendChild(iframe);
                        form.setAttribute('target', iframeName);

                        iframe.addEventListener('load', function () {

                            if (parseInt(num + droppedFiles.length) < 10) {
                                votes.text(parseInt(parseInt(num) + parseInt(globFiles.length)));
                            } else {
                                Snackbar.show({
                                    text: 'Максимум 10 файлов решений!',
                                });
                                $("#textLab").text("Прикрепить решения");
                                return false;
                            }
                            var data = JSON.parse(iframe.contentDocument.body.innerHTML);
                            form.classList.remove('is-uploading')
                            form.classList.add(data.success == true ? 'is-success' : 'is-error')
                            form.removeAttribute('target');

                            if (!data.success) errorMsg.textContent = data.error;
                            iframe.parentNode.removeChild(iframe);
                        });
                    }
                });

                // рестарт формы если была ошибка
                Array.prototype.forEach.call(restart, function (entry) {
                    entry.addEventListener('click', function (e) {
                        e.preventDefault();
                        form.classList.remove('is-error', 'is-success');
                        input.click();
                    });
                });

                // глянул баг для фаерфокса
                input.addEventListener('focus', function () { input.classList.add('has-focus'); });
                input.addEventListener('blur', function () { input.classList.remove('has-focus'); });

            });
        }(document, window, 0));

        
        function openCity(evt, cityName) {
            // Declare all variables
            var i, tabcontent, tablinks;

            // Get all elements with class="tabcontent" and hide them
            tabcontent = document.getElementsByClassName("tabycontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }

            // Get all elements with class="tablinks" and remove the class "active"
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }

            // Show the current tab, and add an "active" class to the link that opened the tab
            document.getElementById(cityName).style.display = "block";
            evt.currentTarget.className += " active";
        }

        /*
        var keywordsList = $(".keywords-list");
        function addKeywordSub(str, i) {
            var $newKeyword = $("<span id='" + i + "' class='keyword'><span class='keyword-remove'></span><span class='keyword-text'>" + str + "</span></span>");
            keywordsList.append($newKeyword).trigger('resizeContainer');
        }

        // $('select').val(1);

        var arr = new Array();
        var lastIndex = 0;
        $('.selectpicker').on('change', function () {
            $(this).find("option").each(function () {
                if ($(this).is(":selected")) {
                    id = $(this).attr("value");
                    if (arr.indexOf(id) == -1) {
                        arr.push(id);
                        lastIndex = id;
                        addKeywordSub(select_option(arr[arr.length - 1]), arr[arr.length - 1]);
                    }
                }
                else {
                    id = $(this).attr("value");
                    // keywordsList.find('#' + id).children(":first").trigger('click')
                    keywordsList.find('#' + id).addClass('keyword-removed');
                    function removeFromMarkup() {
                        $(".keyword-removed").remove();
                    }
                    setTimeout(removeFromMarkup, 500);
                    keywordsList.css({ 'height': 'auto' }).height();
                    arr = jQuery.grep(arr, function (value) {
                        return value != id;
                    });


                }
            });



        });

        function select_option(i) {
            return $('select option[value="' + i + '"]').html();
        }

        /*
        $('.selectpicker').change(function () {

            var selectedItem = $(this).find("option:selected").val();
            addKeywordSub(selectedItem);


        }); */

      

            // var idAttach = $(this).parent().attr('id');
            //  var filesArray = $('#uploadAttache')[0].files;
            //  var fileBuffer = [];
            // Array.prototype.push.apply(fileBuffer, filesArray);
            //  finalFileBuffer.splice(idAttach, 1);
            //alert(fileBuffer)
            //finalFileBuffer = fileBuffer;

 
        
        /*
        $('#dicp').on('click', function(){

            addKeywordSub();
            alert($('#dicp').val())

});*/




    </script>

}