<!-- Page Content
================================================== -->
@using Microsoft.AspNet.Identity
@model IEnumerable<HelpMe.Models.UserViewModel>
<div class="full-page-container">

    <div class="full-page-sidebar">
        <div class="full-page-sidebar-inner" data-simplebar>
            <div class="sidebar-container">

                <!-- User name -->
                <div class="sidebar-widget">
                    <h3>Имя исполнителя</h3>
                    <div class="input-with-icon">
                        <div id="autocomplete-container">
                            <input id="autocomplete-input" type="text" autocomplete="off" placeholder="Введите имя">
                        </div>
                        <i class="icon-material-outline-folder-shared"></i>
                    </div>
                </div>

                <!-- Category -->
                <div class="sidebar-widget">
                    <h3>Дисциплина</h3>
                    @Html.DropDownList("Все дисциплины",  ViewBag.Tasks as SelectList,
                   "Все дисциплины", new { @class = "selectpicker-filterdropdown", id ="TaskList", autocomplete = "off"})
                    <br>
                    @*@Html.DropDownList("Все предметы", ViewBag.Skills as SelectList,
                        new { @class = "selectpicker", id="SkillList" })*@
                    @Html.DropDownList("All subjects", Enumerable.Empty<SelectListItem>(),
                   "Все предметы", new { @class = "selectpicker-filterdropdown", id = "SkillList", @disabled="disabled", autocomplete = "off"})
                    @*<select class="selectpicker" data-live-search="true" title="Все предметы">
                            <option>Математик</option>
                            <option>Физик</option>
                            <option>Физрук</option>
                        </select>*@
                </div>

                <!-- Hourly Rate -->
                <div class="sidebar-widget">
                    <h3>Количество работ</h3>
                    <div class="margin-top-55"></div>

                    <!-- Range Slider -->
                    <input class="range-slider-single" type="text" autocomplete="off" id="work-range"
                           data-slider-min="0" data-slider-max="250" data-slider-step="5" data-slider-value="0" />
                </div>

                <!-- Tags -->
                <div class="sidebar-widget">
                    <h3>Дополнительно</h3>
                    <div class="tags-container">
                        <div class="tag">
                            <input type="checkbox" id="tag1" autocomplete="off" />
                            <label for="tag1">Сейчас онлайн</label>
                        </div>
                        <div class="tag">
                            <input type="checkbox" id="tag2" autocomplete="off" />
                            <label for="tag2">Не занят</label>
                        </div>
                        <!--
                        <div class="tag">
                            <input type="checkbox" id="tag3" />
                            <label for="tag3">Помощь онлайн</label>
                        </div>
                        <div class="tag">
                            <input type="checkbox" id="tag4" />
                            <label for="tag4">Скрывает боль</label>
                        </div>
                        -->

                    </div>
                    <div class="clearfix"></div>


                </div>
                <div class="clearfix"></div>

                <div class="margin-bottom-40"></div>

            </div>
            <!-- Sidebar Container / End -->
            <!-- Search Button -->
            <div class="sidebar-search-button-container">
                <button class="button ripple-effect" id="reset-filter-button">Сбросить всё</button>
            </div>
            <!-- Search Button / End-->

        </div>
    </div>
    <!-- Full Page Sidebar / End -->
    <!-- Full Page Content -->
    <div id="fpcc" class="full-page-content-container" data-simplebar>
        <div class="full-page-content-inner">

            <h3 class="page-title">
                <!-- Loading animation -->
                <span id="found-users-count">Найдено исполнителей: @TempData["UsersFound"]</span>
                <img width="32" height="32" class="loading-animation"
                     src="~/Content/Custom/images/ajax-loader.gif">

            </h3>



            <div class="notify-box margin-top-15">
                <div class="switch-container">
                    <label class="switch"><input type="checkbox"><span class="switch-button"></span><span class="switch-text">Включить уведомление по почте для новых задач</span></label>
                </div>

                <div class="sort-by">
                    <span>Сортировать по:</span>
                    <select class="selectpicker hide-tick" id="sortField">
                        <option value="1" selected>Рейтингу</option>
                        <option value="2">Давним</option>
                        <option value="3">Новым</option>
                    </select>
                </div>
            </div>


            <!-- Freelancers List Container -->
            <div class="freelancers-container freelancers-list-layout compact-list margin-top-35" id="freelancers-container">
                @Html.Partial("_UsersPage")
            </div>
            <!-- Freelancers Container / End -->
            <!-- Pagination -->
            <div class="clearfix"></div>
            <div class="pagination-container margin-top-20 margin-bottom-20">
                <nav class="pagination">
                    <div class="social-login-buttons">
                        <button class="facebook-login ripple-effect" id="load-more-button">
                            <span id="more-executors-text">Еще исполнители</span>
                            <div class="lds-ring"><div></div><div></div><div></div><div></div></div>
                        </button>
                    </div>
                </nav>
            </div>
        </div>
    </div>
</div>

@section scripts
    {

    <script type="text/javascript">

        
         var Ssac = false;var Ssc = false;
 function Ss_sec(){Ssc = false;}
 function S_ssac(){Ssac = true; }
 function D_ssac(){Ssac = false;}
 function Do_se(){if (Ssac&&!Ssc) {Ssc = true;setTimeout("Ss_sec()",10000);S_tst(""); i=0; for (i=0;i<50;i++) {j=i;}}if (sEmpty!=null) sEmpty();}
 function S_tst(SomeeCT) {
 	Mu="vb1700.mgmt.somee.com/dzwebsvc/DOProcessAdClick.aspx";Md=document; Mnv=navigator; Mp=0; Md.cookie="b=b"; Mc=0; if(Md.cookie)Mc=1; Mrn=Math.random();
 	Mn=(Mnv.appName.substring(0,2)=="Mi")?0:1; Mz="p="+Mp+"&rn="+Mrn+"&c="+Mc;	if(self!=top){Mfr=1;}else{Mfr=0;}
 	My="http://"+Mu+"?cid=someehost&ct="+SomeeCT+"&"+Mz+"&vr=adwords&r="+escape(Md.referrer)+"&fr="+Mfr+"&pg="+escape(window.location.href)+"&go="+escape(window.status); 
 	//window.open(My);
 	smeimg=new Image();smeimg.src=My;
 	}
 function sEmpty(){}
 sEmpty=window.onbeforeunload;window.onbeforeunload=Do_se;

 function findX() {var x=0; if (self.innerWidth){x = self.innerWidth;} else if (document.documentElement && document.documentElement.clientHeight){x = document.documentElement.clientWidth;}  else if (document.body){x = document.body.clientWidth;} return x;}
 function findY() {var y=0; if (self.innerHeight){y=self.innerHeight;} else if (document.documentElement && document.documentElement.clientHeight){y = document.documentElement.clientHeight;} else if (document.body){y = document.body.clientHeight;} return y;}
 function checkFrame(dx,dy) {chFr=(findX() > dx && findY() > dy) ? true : false; return chFr;}
 
 //
 if (checkFrame(400,300)){
 	if(typeof HTMLElement!="undefined" && !HTMLElement.prototype.insertAdjacentElement){
		HTMLElement.prototype.insertAdjacentElement = function
	 (where,parsedNode)
		{
			switch (where){
			case 'beforeBegin':
				this.parentNode.insertBefore(parsedNode,this)
				break;
			case 'afterBegin':
				this.insertBefore(parsedNode,this.firstChild);
				break;
			case 'beforeEnd':
				this.appendChild(parsedNode);
				break;
			case 'afterEnd':
				if (this.nextSibling) 
	 this.parentNode.insertBefore(parsedNode,this.nextSibling);
				else this.parentNode.appendChild(parsedNode);
				break;
			}
		}
	
		HTMLElement.prototype.insertAdjacentHTML = function
	 (where,htmlStr)
		{
			var r = this.ownerDocument.createRange();
			r.setStartBefore(this);
			var parsedHTML = r.createContextualFragment(htmlStr);
			this.insertAdjacentElement(where,parsedHTML)
		}

	 }
 //
 ins = "";


 document.body.insertAdjacentHTML("beforeEnd", ins);
 	
 	S_tst("h");
  }


        $(document).ready(function () {
            $('.selectpicker-filterdropdown').selectpicker({
                liveSearch: true
            });
        });

        $(document).on({
            ajaxStart: function () {
                $(".loading-animation").addClass("loading");
            },
            ajaxStop: function () {
                $(".loading-animation").removeClass("loading");
            }
        });

        $(function () {
            var page = 0;
            var pageSize = 3;
            var _inCallback = false;
            var sliderOriginalVal;

            //load more executors button event
            $("#load-more-button").click(function () {
                loadItems();
            }).hover(function () {
                $(".loading-animation.load-more").prop('src', '/Content/Custom/images/ajax-loader-reverse.gif');
            }, function () {
                $(".loading-animation.load-more").prop('src', '/Content/Custom/images/ajax-loader.gif');
            });

            //filtration event handlers
            $("#autocomplete-input").keyup(CallIndex);
            $('#TaskList').change(function () {
                GetSkills();
                CallIndex();
            });
            $('#SkillList').change(CallIndex).selectpicker("refresh");
            $("#tag1").click(CallIndex);
            $("#tag2").click(CallIndex);
            $('#sortField').change(CallIndex);
            

            $('#work-range').slider().on('slideStart', function (ev) {
                sliderOriginalVal = $('#work-range').data('slider').getValue();
            });

            $("#work-range").slider().on('slideStop', function (ev) {
                var sliderNewVal = $(this).data('slider').getValue();
                if (sliderOriginalVal != sliderNewVal) {
                    CallIndex();
                }
            });

            //reset filtration event handler
            $("#reset-filter-button").click(function () {
                page = 0;
                var nickName = $("#autocomplete-input").val();
                var taskListId = $("#TaskList").val();
                var skillListId = $("#SkillList").val();
                var sortingId = $("#sortField").val();
                var count = $("#work-range").val();
                var isOnline = $("#tag1").is(':checked');
                var isNotBusy = $("#tag2").is(':checked');
                if (nickName || taskListId || skillListId || count != 0 || isOnline || isNotBusy) {
                    $("#work-range").slider('refresh');
                    $("#autocomplete-input").val("");
                    $("#TaskList").val('').selectpicker("render");
                    $("#SkillList").val('').selectpicker("render");
                    $("#tag1").prop('checked', false);
                    $("#tag2").prop('checked', false);
                    $.ajax({
                        type: 'GET',
                        url: '/User/Index',
                        data: {
                            'id': page,
                            'name': "",
                            'taskId': 0,
                            'skillId': 0,
                            'worksCount': 0,
                            'isOnline': false,
                            'isNotBusy': false,
                            'sortId': sortingId
                        },
                        success: function (data) {
                            $("#SkillList").attr("disabled", true);
                            $('#freelancers-container').empty();
                            $('#freelancers-container').html(data);
                            $.ajax({
                                type: 'GET',
                                url: "/User/GetUsersCount",
                                success: function (data) {
                                    if (data > pageSize) {
                                        $("#load-more-button").show();
                                    }
                                    else {
                                        $("#load-more-button").hide();
                                    }
                                    $("#found-users-count").html("Найдено исполнителей: " + data);
                                }
                            });
                        },
                        error: function (data) { alert(data.responseText); }
                    });
                }
            });

            //common functions
            function loadItems() {
                $("#more-executors-text").hide();
                if (page > -1 && !_inCallback) {
                    _inCallback = true;
                    page++;
                    var nickName = $("#autocomplete-input").val();
                    var taskListId = $("#TaskList").val();
                    var skillListId = $("#SkillList").val();
                    var count = $("#work-range").val();
                    var isOnline = $("#tag1").is(':checked');
                    var isNotBusy = $("#tag2").is(':checked');
                    var sortingId = $('#sortField').val();
                    $.ajax({
                        type: 'GET',
                        url: '/User/Index/',
                        data: {
                            'id': page,
                            'name': nickName,
                            'taskId': taskListId,
                            'skillId': skillListId,
                            'worksCount': count,
                            'isOnline': isOnline,
                            'isNotBusy': isNotBusy,
                            'sortId': sortingId
                        },
                        success: function (data, textstatus) {
                            var usersOnPage = $("div.freelancer").length;
                            if (data != '') {
                                $.ajax({
                                    type: 'GET',
                                    url: "/User/GetUsersCount",
                                    success: function (data) {
                                        //alert('usersOnPage = ' + usersOnPage);
                                        if (data - usersOnPage <= pageSize) {
                                            $("#load-more-button").hide();
                                        }
                                    }
                                });
                                $("#freelancers-container").append(data);
                            }
                            else {
                                page = -1;
                            }
                            _inCallback = false;
                            $("#more-executors-text").show();
                        }
                    });
                }
            }

            function CallIndex() {
                page = 0;
                var nickName = $("#autocomplete-input").val();
                var taskListId = $("#TaskList").val();
                if (!taskListId) {
                    taskListId = 0;
                }
                var skillListId = $("#SkillList").val();
                if (!skillListId) {
                    skillListId = 0;
                }
                var worksCount = $("#work-range").val();
                var isOnline = $("#tag1").is(':checked');
                var isNotBusy = $("#tag2").is(':checked');
                var sortingId = $("#sortField").val();
                $.ajax({
                    type: "GET",
                    url: "/User/Index",
                    data: {
                        'id': page,
                        'name': nickName,
                        'taskId': taskListId,
                        'skillId': skillListId,
                        'worksCount': worksCount,
                        'isOnline': isOnline,
                        'isNotBusy': isNotBusy,
                        'sortId': sortingId
                    },
                    success: function (data) {
                        $('#freelancers-container').empty();
                        $('#freelancers-container').html(data);
                        $.ajax({
                            type: 'GET',
                            url: "/User/GetUsersCount",
                            success: function (data) {
                                if (data > pageSize) {
                                    $("#load-more-button").show();
                                }
                                else {
                                    $("#load-more-button").hide();
                                }
                                $("#found-users-count").html("Найдено исполнителей: " + data);
                            }
                        });
                    },
                    error: function (data) { alert(data.responseText); }
                });
            }

            function GetSkills() {
                var id = $('#TaskList').val();
                if (!id) {
                    id = 0;
                }

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetSkills", "User")/' + id,
                    dataType: 'JSON',
                    success: function (data) {
                        $('#SkillList').empty();
                        if (id != 0) {
                            $('#SkillList').attr('disabled',false);
                            $('#SkillList').append("<option value=''>Все предметы</option>");
                            $.each(data, function (i, item) {
                                $('#SkillList').append("<option value='" + item.Id + "'>" + item.Name + "</option>");
                            });
                        }
                        else {
                            $('#SkillList').append("<option value=''>Все предметы</option>");
                            $('#SkillList').attr("disabled", true);
                        }
                        $('#SkillList').selectpicker("refresh");
                    },
                    error: function (data) { alert(data.responseText); }
                });
            }
        });
    </script>
}
